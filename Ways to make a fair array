class Solution:
    def waysToMakeFair(self, nums: List[int]) -> int:
        n = len(nums)
        prefix_sum_odd = [0] * (n + 1)
        prefix_sum_even = [0] * (n + 1)
        
        for i in range(n):
            prefix_sum_odd[i + 1] = prefix_sum_odd[i] + (nums[i] if i % 2 == 1 else 0)
            prefix_sum_even[i + 1] = prefix_sum_even[i] + (nums[i] if i % 2 == 0 else 0)
        
        count = 0
        for i in range(n):
            odd_sum_left = prefix_sum_odd[i] + prefix_sum_even[-1] - prefix_sum_even[i + 1]
            even_sum_left = prefix_sum_even[i] + prefix_sum_odd[-1] - prefix_sum_odd[i + 1]
            if odd_sum_left == even_sum_left:
                count += 1
        
        return count
